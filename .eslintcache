[{"/home/user/Desktop/wavelix/Code/wavelix_admin/src/App.js":"1","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reportWebVitals.js":"2","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/Login.js":"3","/home/user/Desktop/wavelix/Code/wavelix_admin/src/Routes.js":"4","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/index.js":"5","/home/user/Desktop/wavelix/Code/wavelix_admin/src/index.js":"6","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/LoginReducer.js":"7","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/types.js":"8","/home/user/Desktop/wavelix/Code/wavelix_admin/src/helpers/index.js":"9","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/index.js":"10","/home/user/Desktop/wavelix/Code/wavelix_admin/src/helpers/actionsHelper.js":"11","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/LoginActions.js":"12","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/Home.js":"13","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/TopHeader.js":"14","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/Wrapper.js":"15","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/WrapperActions.js":"16","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/HomeReducer.js":"17","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/HomeActions.js":"18","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/AdminAccounts.js":"19","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/AdminAccountsActions.js":"20","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/AdminAccountsReducer.js":"21","/home/user/Desktop/wavelix/Code/wavelix_admin/src/helpers/adminProfileHelper.js":"22","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/ViewAdminAccountReducer.js":"23","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/ViewAdminAccountActions.js":"24","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/ViewAdminAccount.js":"25","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/CreateAdminAccount.js":"26","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/CreateAdminAccountActions.js":"27","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/CreateAdminAccountReducer.js":"28","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/CustomerAccountsActions.js":"29","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/CustomerAccounts.js":"30","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/CustomerAccountsReducer.js":"31","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/ViewCustomerAccountReducer.js":"32","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/ViewCustomerAccountActions.js":"33","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/ViewCustomerAccount.js":"34","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/StoreAccounts.js":"35","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/StoreAccountsReducer.js":"36","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/StoreAccountsActions.js":"37","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/ViewStoreAccount.js":"38","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/ViewStoreAccountReducer.js":"39","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/ViewStoreAccountActions.js":"40"},{"size":753,"mtime":1607501857378,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1606644508129,"results":"43","hashOfConfig":"42"},{"size":15340,"mtime":1607159123504,"results":"44","hashOfConfig":"42"},{"size":1588,"mtime":1607945650162,"results":"45","hashOfConfig":"42"},{"size":1799,"mtime":1608020614390,"results":"46","hashOfConfig":"42"},{"size":500,"mtime":1606644508129,"results":"47","hashOfConfig":"42"},{"size":3806,"mtime":1607502994332,"results":"48","hashOfConfig":"42"},{"size":7959,"mtime":1608025637455,"results":"49","hashOfConfig":"42"},{"size":70,"mtime":1607166648646,"results":"50","hashOfConfig":"42"},{"size":396,"mtime":1607944428259,"results":"51","hashOfConfig":"42"},{"size":222,"mtime":1606730890543,"results":"52","hashOfConfig":"42"},{"size":5092,"mtime":1608020725570,"results":"53","hashOfConfig":"42"},{"size":11131,"mtime":1608020753092,"results":"54","hashOfConfig":"42"},{"size":3161,"mtime":1607692200562,"results":"55","hashOfConfig":"42"},{"size":2698,"mtime":1607502994328,"results":"56","hashOfConfig":"42"},{"size":1163,"mtime":1606831132574,"results":"57","hashOfConfig":"42"},{"size":2461,"mtime":1606915201344,"results":"58","hashOfConfig":"42"},{"size":4980,"mtime":1606915201332,"results":"59","hashOfConfig":"42"},{"size":10602,"mtime":1607695133496,"results":"60","hashOfConfig":"42"},{"size":3298,"mtime":1607446587096,"results":"61","hashOfConfig":"42"},{"size":1349,"mtime":1607446741221,"results":"62","hashOfConfig":"42"},{"size":447,"mtime":1607166648654,"results":"63","hashOfConfig":"42"},{"size":4602,"mtime":1607435642527,"results":"64","hashOfConfig":"42"},{"size":8295,"mtime":1607598611953,"results":"65","hashOfConfig":"42"},{"size":21530,"mtime":1607435847954,"results":"66","hashOfConfig":"42"},{"size":13030,"mtime":1607433979357,"results":"67","hashOfConfig":"42"},{"size":5710,"mtime":1607433824807,"results":"68","hashOfConfig":"42"},{"size":4031,"mtime":1607433281038,"results":"69","hashOfConfig":"42"},{"size":3053,"mtime":1607594099524,"results":"70","hashOfConfig":"42"},{"size":6883,"mtime":1607597081049,"results":"71","hashOfConfig":"42"},{"size":1347,"mtime":1607594099528,"results":"72","hashOfConfig":"42"},{"size":1645,"mtime":1607597686366,"results":"73","hashOfConfig":"42"},{"size":2775,"mtime":1607597686382,"results":"74","hashOfConfig":"42"},{"size":8785,"mtime":1607598425271,"results":"75","hashOfConfig":"42"},{"size":18704,"mtime":1608025326709,"results":"76","hashOfConfig":"42"},{"size":1836,"mtime":1608024029629,"results":"77","hashOfConfig":"42"},{"size":4126,"mtime":1608024628157,"results":"78","hashOfConfig":"42"},{"size":25118,"mtime":1607958320454,"results":"79","hashOfConfig":"42"},{"size":2860,"mtime":1608025960495,"results":"80","hashOfConfig":"42"},{"size":4292,"mtime":1608030019144,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"zgiw1n",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/Desktop/wavelix/Code/wavelix_admin/src/App.js",[],["181","182"],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/reportWebVitals.js",[],["183","184"],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/Login.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/Routes.js",[],["185","186"],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/index.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/index.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/LoginReducer.js",[],["187","188"],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/types.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/helpers/index.js",[],["189","190"],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/index.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/helpers/actionsHelper.js",[],["191","192"],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/LoginActions.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/Home.js",["193"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    logoutAdmin,\n    initializeHomePage,\n    changeMyEmail,\n    openCredentialModal,\n    closeCredentialModal,\n    changeMyPassword,\n    clearHomeState\n} from \"../actions\";\nimport TopHeader from \"./TopHeader\";\nimport Wrapper from \"./Wrapper\";\nimport {  Spinner, Image, Card, Row, Col ,  Button, Form, Modal, Alert} from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { getAdminRoles } from \"../helpers\";\n\nclass Home extends Component{\n\n    constructor(props) {\n\n        super(props);\n\n        const history = props.history;\n\n        const credential_modal_mode = null; // { 0: email, 1: password }\n\n        const credential = \"\";\n\n        this.state = {\n            history,\n            credential_modal_mode,\n            credential\n        };\n\n    }\n\n    componentWillUnmount(){\n        this.props.clearHomeState();\n    }\n\n    componentDidMount(){\n\n        const {\n            logged_in,\n            initializeHomePage,\n            access_token,\n            client,\n            uid\n        } = this.props;\n\n        const { history } = this.state;\n\n\n        if(!logged_in){\n\n            history.push(\"/\");\n\n        }else{\n\n            initializeHomePage(access_token, client, uid, history);\n\n        }\n\n    }\n\n\n\n\n\n    exitCredentialModal(){\n\n        const { closeCredentialModal } = this.props;\n\n        closeCredentialModal();\n\n        this.setState({credential_modal_mode: null, credential: ''});\n\n    }\n\n\n    credentialError(){\n\n        const { credential_error } = this.props;\n\n        if(credential_error.length > 0){\n\n            return(\n\n                <Alert variant=\"danger\">\n                    {credential_error}\n                </Alert>\n\n            );\n\n        }\n\n    }\n\n\n    changingCredentialSpinner(){\n\n        const { changing_credential } = this.props;\n\n        if(changing_credential){\n\n            return(\n\n                <div className=\"spinner-container\">\n\n                    <Spinner animation=\"border\" variant=\"primary\" />\n\n                </div>\n\n\n            );\n\n        }\n\n\n    }\n\n\n    credentialModal(){\n\n        const {\n            credential_modal_visible,\n            access_token,\n            client,\n            uid,\n            changeMyEmail,\n            changeMyPassword\n        } = this.props;\n\n\n        const { history, credential_modal_mode, credential } = this.state;\n\n        if(credential_modal_visible && credential_modal_mode !== null){\n\n            return(\n\n                <Modal\n                    show={credential_modal_visible}\n                    onHide={() => {\n                        this.exitCredentialModal();\n                    }}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                >\n\n                    <Modal.Header closeButton>\n\n                        <Modal.Title>Change {credential_modal_mode === 0 ? 'Email' : 'Password'}</Modal.Title>\n\n                    </Modal.Header>\n\n                    <Modal.Body>\n\n\n                        <Form.Group controlId=\"formPlaintextCredential\">\n\n                            <Form.Label>\n                                {credential_modal_mode === 0 ? 'Email' : 'Password ( at least 8 characters long )'}\n                            </Form.Label>\n\n                            <Form.Control\n                                type={credential_modal_mode === 0 ? 'email' : 'password'}\n                                placeholder={credential_modal_mode === 0 ? 'email' : 'password'}\n                                onChange={(e) => {\n                                    this.setState({credential: e.target.value});\n                                }}\n                            />\n\n                        </Form.Group>\n\n                        {this.changingCredentialSpinner()}\n\n                        {this.credentialError()}\n\n\n\n                    </Modal.Body>\n\n                    <Modal.Footer>\n\n\n                        <Button\n                            variant=\"secondary\"\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.exitCredentialModal();\n                            }}\n                        >\n                            Close\n                        </Button>\n\n\n                        <Button\n                            variant=\"primary\"\n                            onClick={(e) => {\n\n                                e.preventDefault();\n\n                                if(credential_modal_mode === 0){\n\n                                    changeMyEmail(credential, access_token, client, uid, history);\n\n                                }else{\n\n                                    changeMyPassword(credential, access_token, client, uid, history);\n\n                                }\n\n                            }}\n                        >\n                            Submit\n                        </Button>\n\n                    </Modal.Footer>\n\n\n                </Modal>\n\n\n            );\n\n        }\n\n\n    }\n\n\n    show() {\n\n        const {\n            initializing_page,\n            profile_photo,\n            name,\n            email\n        } = this.props;\n\n        if (initializing_page) {\n\n            return(\n\n                <div className=\"center-container\">\n\n                    <div className=\"spinner-container\">\n\n                        <Spinner animation=\"border\" variant=\"primary\" />\n\n                    </div>\n\n                </div>\n\n\n\n            );\n\n        }else{\n\n            return(\n\n                <div className=\"page-container\">\n\n\n                    <div className=\"header-container\">\n\n\n                        <Image className=\"profile-photo\" src={profile_photo} thumbnail />\n\n\n                    </div>\n\n\n                    <div className=\"account-container\">\n\n\n                        <Card className=\"text-center account-card-container\">\n\n                            <Card.Header className=\"account-tile\">\n                                Account Information\n                            </Card.Header>\n\n\n\n                            <Card.Body>\n\n\n                                <Form>\n\n\n                                    <Form.Group as={Row} controlId=\"formPlaintextName\">\n\n                                        <Form.Label column sm=\"2\">\n                                            Name\n                                        </Form.Label>\n\n                                        <Col sm=\"10\">\n                                            <Form.Control\n                                                readOnly\n                                                type=\"text\"\n                                                value={name}\n                                            />\n                                        </Col>\n\n                                    </Form.Group>\n\n\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n\n                                        <Form.Label column sm=\"2\">\n                                            Email\n                                        </Form.Label>\n\n                                        <Col sm=\"10\">\n\n                                            <Form.Control\n                                                readOnly\n                                                type=\"text\"\n                                                value={email}\n                                            />\n\n                                        </Col>\n\n                                    </Form.Group>\n\n\n                                    <Form.Group as={Row} controlId=\"formPlaintextRoles\">\n\n                                        <Form.Label column sm=\"2\">\n                                            Roles\n                                        </Form.Label>\n\n                                        <Col sm=\"10\">\n\n                                            <Form.Control\n                                                readOnly\n                                                type=\"text\"\n                                                value={getAdminRoles(this.props.roles)}\n                                            />\n\n                                        </Col>\n\n                                    </Form.Group>\n\n\n                                </Form>\n\n\n\n\n                            </Card.Body>\n\n\n\n\n                            <Card.Footer className=\"footer-buttons-container\" >\n\n                                <Button\n                                    variant=\"outline-primary\"\n                                    className=\"footer-button\"\n                                    onClick={(e) => {\n\n                                        e.preventDefault();\n\n                                        this.props.openCredentialModal();\n\n                                        this.setState({credential_modal_mode: 0});\n\n\n                                    }}\n                                >\n                                    Change email\n                                </Button>\n\n\n                                <Button\n                                    variant=\"outline-primary\"\n                                    className=\"footer-button\"\n                                    onClick={(e) => {\n\n                                        e.preventDefault();\n\n                                        this.props.openCredentialModal();\n\n                                        this.setState({credential_modal_mode: 1});\n\n                                    }}\n                                >\n                                    Change password\n                                </Button>\n\n\n\n                            </Card.Footer>\n\n\n\n                        </Card>\n\n\n\n                    </div>\n\n\n\n                    {this.credentialModal()}\n\n\n                </div>\n\n            );\n        }\n\n    }\n\n\n\n\n    render(){\n\n        return(\n\n            <Wrapper\n                history={this.state.history}\n            >\n\n                <div>\n\n                    <TopHeader\n                        history={this.state.history}\n                    />\n\n\n                    {this.show()}\n\n\n                </div>\n\n            </Wrapper>\n\n        );\n\n    }\n\n\n}\n\n\nconst mapStateToProps = (state) => {\n\n    const {\n        access_token,\n        client,\n        uid,\n        logged_in,\n        roles\n    } = state.login;\n\n    const {\n        initializing_page,\n        profile_photo,\n        name,\n        email,\n        changing_credential,\n        credential_error,\n        credential_modal_visible\n    } = state.home;\n\n\n    return {\n        access_token,\n        client,\n        uid,\n        logged_in,\n        roles,\n        initializing_page,\n        profile_photo,\n        name,\n        email,\n        changing_credential,\n        credential_error,\n        credential_modal_visible\n    };\n\n\n};\n\n\nexport default connect(mapStateToProps, {\n    logoutAdmin,\n    initializeHomePage,\n    changeMyEmail,\n    openCredentialModal,\n    closeCredentialModal,\n    changeMyPassword,\n    clearHomeState\n})(Home)","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/TopHeader.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/Wrapper.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/WrapperActions.js",[],["194","195"],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/HomeReducer.js",["196"],"import {\n    CHANGE_CREDENTIAL,\n    CHANGE_CREDENTIAL_ERROR,\n    CHANGE_MY_EMAIL_SUCCESS,\n    INITIALIZE_HOME_PAGE,\n    INITIALIZE_HOME_PAGE_COMPLETE,\n    LOGOUT_SUCCESS,\n    OPEN_CREDENTIAL_MODAL,\n    CLOSE_CREDENTIAL_MODAL,\n    CHANGE_MY_PASSWORD_SUCCESS,\n    CLEAR_HOME_STATE\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    initializing_page: false,\n    profile_photo: '',\n    name: '',\n    email: '',\n    changing_credential: false,\n    credential_error: '',\n    credential_modal_visible: false\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CLOSE_CREDENTIAL_MODAL:\n            return{\n                ...state,\n                changing_credential: false,\n                credential_error: '',\n                credential_modal_visible: false\n            };\n        case OPEN_CREDENTIAL_MODAL:\n            return{\n                ...state,\n                credential_modal_visible: true\n            };\n        case CHANGE_MY_PASSWORD_SUCCESS:\n            return{\n                ...state,\n                changing_credential: false,\n                credential_modal_visible: false\n            };\n        case CHANGE_MY_EMAIL_SUCCESS:\n            return{\n                ...state,\n                changing_credential: false,\n                credential_modal_visible: false,\n                email: action.payload.email\n            };\n        case CHANGE_CREDENTIAL_ERROR:\n            return{\n                ...state,\n                changing_credential: false,\n                credential_error: action.payload\n            };\n        case CHANGE_CREDENTIAL:\n            return{\n                ...state,\n                changing_credential: true,\n                credential_error: ''\n            };\n        case INITIALIZE_HOME_PAGE_COMPLETE:\n            return{\n                ...state,\n                initializing_page: false,\n                profile_photo: action.payload.profile_photo,\n                name: action.payload.name,\n                email: action.payload.email\n            };\n        case INITIALIZE_HOME_PAGE:\n            return{\n                ...state,\n                initializing_page: true\n            };\n        case CLEAR_HOME_STATE:\n            return{\n                ...state,\n                ...INITIAL_STATE\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...INITIAL_STATE\n            };\n        default:\n            return state;\n    }\n}","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/HomeActions.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/AdminAccounts.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/AdminAccountsActions.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/AdminAccountsReducer.js",["197"],"import {\n    LOGOUT_SUCCESS,\n    GET_ADMIN_ACCOUNTS,\n    GET_ADMIN_ACCOUNTS_COMPLETE,\n    CLEAR_ADMIN_ACCOUNTS_STATE,\n    SEARCH_ADMINS_COMPLETE,\n    SEARCH_ADMINS_LIMIT_CHANGED\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    initializing_page: false,\n    admins: [],\n    available_roles: [],\n    limit: 30\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SEARCH_ADMINS_LIMIT_CHANGED:\n            return{\n                ...state,\n                limit: action.payload\n            };\n        case SEARCH_ADMINS_COMPLETE:\n            return{\n                ...state,\n                admins: action.payload\n            };\n        case GET_ADMIN_ACCOUNTS_COMPLETE:\n            return{\n                ...state,\n                initializing_page: false,\n                admins: action.payload.admins,\n                available_roles: action.payload.available_roles\n            };\n        case GET_ADMIN_ACCOUNTS:\n            return{\n                ...state,\n                initializing_page: true\n            };\n        case CLEAR_ADMIN_ACCOUNTS_STATE:\n            return{\n                ...state,\n                ...INITIAL_STATE\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...INITIAL_STATE\n            };\n        default:\n            return state;\n    }\n}","/home/user/Desktop/wavelix/Code/wavelix_admin/src/helpers/adminProfileHelper.js",[],["198","199"],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/ViewAdminAccountReducer.js",["200"],"import {\n    LOGOUT_SUCCESS,\n    VIEW_ADMIN_ACCOUNT,\n    VIEW_ADMIN_ACCOUNT_SUCCESS,\n    VIEW_ADMIN_ACCOUNT_FAILURE,\n    CLEAR_VIEW_ADMIN_ACCOUNT_STATE,\n    OPEN_CHANGE_PASSWORD_MODAL,\n    CLOSE_CHANGE_PASSWORD_MODAL,\n    CHANGE_ADMIN_ACCOUNT_PASSWORD,\n    CHANGE_ADMIN_ACCOUNT_PASSWORD_FAILURE,\n    CHANGE_ADMIN_ACCOUNT_PASSWORD_SUCCESS,\n    OPEN_CHANGE_ROLES_MODAL,\n    CLOSE_CHANGE_ROLES_MODAL,\n    CHANGE_ADMIN_ACCOUNT_ROLES,\n    CHANGE_ADMIN_ACCOUNT_ROLES_FAILURE,\n    CHANGE_ADMIN_ACCOUNT_ROLES_SUCCESS\n} from \"../actions/types\";\n\n\nconst INITIAL_STATE = {\n    initializing_page: false,\n    admin_profile_photo: '',\n    admin_full_name: '',\n    admin_email: '',\n    admin_roles: [],\n    available_roles: [],\n    current_sign_in_ip: null,\n    last_sign_in_ip: null,\n    change_password_modal_visible: false,\n    change_roles_modal_visible: false,\n    editing_account: false,\n    edit_account_success_message: '',\n    edit_account_error_message: ''\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CHANGE_ADMIN_ACCOUNT_ROLES_SUCCESS:\n            return{\n                ...state,\n                editing_account: false,\n                admin_roles: action.payload.admin_roles,\n                edit_account_success_message: action.payload.edit_account_success_message\n            };\n        case CHANGE_ADMIN_ACCOUNT_ROLES_FAILURE:\n            return{\n                ...state,\n                editing_account: false,\n                edit_account_error_message: action.payload\n            };\n        case CHANGE_ADMIN_ACCOUNT_ROLES:\n            return{\n                ...state,\n                editing_account: true,\n                edit_account_success_message: '',\n                edit_account_error_message: ''\n            };\n        case CLOSE_CHANGE_ROLES_MODAL:\n            return{\n                ...state,\n                change_roles_modal_visible: false,\n                editing_account: false,\n                edit_account_success_message: '',\n                edit_account_error_message: ''\n            };\n        case OPEN_CHANGE_ROLES_MODAL:\n            return{\n                ...state,\n                change_roles_modal_visible: true\n            };\n        case CHANGE_ADMIN_ACCOUNT_PASSWORD_SUCCESS:\n            return{\n                ...state,\n                editing_account: false,\n                edit_account_success_message: action.payload\n            };\n        case CHANGE_ADMIN_ACCOUNT_PASSWORD_FAILURE:\n            return{\n                ...state,\n                editing_account: false,\n                edit_account_error_message: action.payload\n            };\n        case CHANGE_ADMIN_ACCOUNT_PASSWORD:\n            return{\n                ...state,\n                editing_account: true,\n                edit_account_success_message: '',\n                edit_account_error_message: ''\n            };\n        case CLOSE_CHANGE_PASSWORD_MODAL:\n            return{\n                ...state,\n                change_password_modal_visible: false,\n                editing_account: false,\n                edit_account_success_message: '',\n                edit_account_error_message: ''\n            };\n        case OPEN_CHANGE_PASSWORD_MODAL:\n            return{\n                ...state,\n                change_password_modal_visible: true\n            };\n        case VIEW_ADMIN_ACCOUNT_SUCCESS:\n            return{\n                ...state,\n                initializing_page: false,\n                admin_profile_photo: action.payload.admin_profile_photo,\n                admin_full_name: action.payload.admin_full_name,\n                admin_email: action.payload.admin_email,\n                admin_roles: action.payload.admin_roles,\n                available_roles: action.payload.available_roles,\n                current_sign_in_ip: action.payload.current_sign_in_ip === undefined ? null :  action.payload.current_sign_in_ip,\n                last_sign_in_ip: action.payload.last_sign_in_ip === undefined ? null : action.payload.last_sign_in_ip\n            };\n        case VIEW_ADMIN_ACCOUNT_FAILURE:\n            return{\n                ...state,\n                initializing_page: false\n            };\n        case VIEW_ADMIN_ACCOUNT:\n            return{\n                ...state,\n                initializing_page: true\n            };\n        case CLEAR_VIEW_ADMIN_ACCOUNT_STATE:\n            return{\n                ...state,\n                ...INITIAL_STATE\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...INITIAL_STATE\n            };\n        default:\n            return state;\n    }\n}","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/ViewAdminAccountActions.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/ViewAdminAccount.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/CreateAdminAccount.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/CreateAdminAccountActions.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/CreateAdminAccountReducer.js",["201"],"import {\n    INITIALIZE_NEW_ADMIN_ACCOUNT,\n    INITIALIZE_NEW_ADMIN_ACCOUNT_COMPLETE,\n    LOGOUT_SUCCESS,\n    CLEAR_CREATE_ADMIN_ACCOUNT_STATE,\n    CREATE_ADMIN_ACCOUNT,\n    CREATE_ADMIN_ACCOUNT_SUCCESS,\n    CREATE_ADMIN_EMAIL_ERROR,\n    CREATE_ADMIN_PASSWORD_ERROR,\n    CREATE_ADMIN_FULL_NAME_ERROR,\n    CREATE_ADMIN_PHOTO_ERROR,\n    CREATE_ADMIN_ROLES_ERROR,\n    CREATE_ADMIN_ERROR,\n    CREATE_ADMIN_ACCOUNT_FAILURE,\n    CLOSE_CREATE_ADMIN_SUCCESS_MODAL,\n    CLEAR_CREATE_ADMIN_ACCOUNT_ERRORS\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    initializing_page: false,\n    available_roles: [],\n    email_invalid: false,\n    email_error: '',\n    password_invalid: false,\n    password_error: '',\n    full_name_invalid: false,\n    full_name_error: '',\n    profile_photo_error: '',\n    roles_error: '',\n    create_error: '',\n    creating_account: false,\n    create_success_modal_visible: false\n};\n\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CLEAR_CREATE_ADMIN_ACCOUNT_ERRORS:\n            return{\n                ...state,\n                email_invalid: false,\n                email_error: '',\n                password_invalid: false,\n                password_error: '',\n                full_name_invalid: false,\n                full_name_error: '',\n                profile_photo_error: '',\n                roles_error: '',\n                create_error: ''\n            };\n        case CLOSE_CREATE_ADMIN_SUCCESS_MODAL:\n            return{\n                ...state,\n                create_success_modal_visible: false\n            };\n        case CREATE_ADMIN_ACCOUNT_SUCCESS:\n            return{\n                ...state,\n                email_invalid: false,\n                email_error: '',\n                password_invalid: false,\n                password_error: '',\n                full_name_invalid: false,\n                full_name_error: '',\n                profile_photo_error: '',\n                roles_error: '',\n                create_error: '',\n                creating_account: false,\n                create_success_modal_visible: true\n            };\n        case CREATE_ADMIN_ACCOUNT_FAILURE:\n            return{\n                ...state,\n                creating_account: false\n            };\n        case CREATE_ADMIN_ERROR:\n            return{\n                ...state,\n                create_error: action.payload\n            };\n        case CREATE_ADMIN_ROLES_ERROR:\n            return{\n                ...state,\n                roles_error: action.payload\n            };\n        case CREATE_ADMIN_PHOTO_ERROR:\n            return{\n                ...state,\n                profile_photo_error: action.payload\n            };\n        case CREATE_ADMIN_FULL_NAME_ERROR:\n            return{\n                ...state,\n                full_name_invalid: true,\n                full_name_error: action.payload\n            };\n        case CREATE_ADMIN_PASSWORD_ERROR:\n            return{\n                ...state,\n                password_invalid: true,\n                password_error: action.payload\n            };\n        case CREATE_ADMIN_EMAIL_ERROR:\n            return{\n                ...state,\n                email_invalid: true,\n                email_error: action.payload\n            };\n        case CREATE_ADMIN_ACCOUNT:\n            return{\n                ...state,\n\n                creating_account: true\n            };\n        case INITIALIZE_NEW_ADMIN_ACCOUNT_COMPLETE:\n            return{\n                ...state,\n                initializing_page: false,\n                available_roles: action.payload\n            };\n        case INITIALIZE_NEW_ADMIN_ACCOUNT:\n            return{\n                ...state,\n                initializing_page: true\n            };\n        case CLEAR_CREATE_ADMIN_ACCOUNT_STATE:\n            return{\n                ...state,\n                ...INITIAL_STATE\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...INITIAL_STATE\n            };\n        default:\n            return state;\n    }\n}","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/CustomerAccountsActions.js",["202"],"import {\n    LOGOUT_SUCCESS,\n    OPEN_TIMEOUT_MODAL,\n    GET_CUSTOMER_ACCOUNTS,\n    GET_CUSTOMER_ACCOUNTS_COMPLETE,\n    GET_CUSTOMER_ACCOUNTS_ROUTE,\n    CLEAR_CUSTOMER_ACCOUNTS_STATE,\n    SEARCH_CUSTOMER_ACCOUNTS_COMPLETE,\n    SEARCH_CUSTOMER_ACCOUNTS_ROUTE,\n    SEARCH_CUSTOMER_ACCOUNTS_LIMIT_CHANGED\n} from \"./types\";\n\nimport axios from \"axios\";\nimport { getFormData } from \"../helpers\";\nimport _ from \"lodash\";\n\nexport const searchCustomerAccountsLimitChanged = (limit) => {\n\n    return{\n      type: SEARCH_CUSTOMER_ACCOUNTS_LIMIT_CHANGED,\n      payload: limit\n    };\n\n};\n\nexport const searchCustomers = ( limit, search, access_token, client, uid, history ) => {\n\n    return(dispatch) => {\n\n        const config = {\n            headers: {\n                \"access-token\": access_token,\n                \"client\": client,\n                \"uid\": uid,\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        let bodyFormData = getFormData({\n            limit: limit,\n            search: search\n        });\n\n\n        axios.post(SEARCH_CUSTOMER_ACCOUNTS_ROUTE, bodyFormData, config)\n            .then(response => {\n\n                const data = response.data;\n\n                const customer_accounts = data.customer_accounts;\n\n                dispatch({type: SEARCH_CUSTOMER_ACCOUNTS_COMPLETE, payload: customer_accounts});\n\n\n            }).catch(error => {\n\n            if(error.response !== undefined){\n\n                const status = error.response.status;\n\n                dispatch({type: LOGOUT_SUCCESS});\n\n                if(status === 440){\n\n                    dispatch({type: OPEN_TIMEOUT_MODAL});\n\n                }\n\n                history.push(\"/\");\n\n            }\n\n        });\n\n\n\n\n    };\n\n\n\n};\n\nexport const clearCustomerAccountsState = () => {\n\n    return{\n      type: CLEAR_CUSTOMER_ACCOUNTS_STATE\n    };\n\n};\n\nexport const getCustomerAccounts = (limit, access_token, client, uid, history) => {\n\n    return(dispatch) => {\n\n        const config = {\n            headers: {\n                \"access-token\": access_token,\n                \"client\": client,\n                \"uid\": uid,\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        let bodyFormData = getFormData({\n            limit: limit\n        });\n\n        dispatch({type: GET_CUSTOMER_ACCOUNTS});\n\n        axios.post(GET_CUSTOMER_ACCOUNTS_ROUTE, bodyFormData, config)\n            .then(response => {\n\n                const data = response.data;\n\n                const customer_accounts = data.customer_accounts;\n\n                // console.log(customer_accounts);\n\n                dispatch({type: GET_CUSTOMER_ACCOUNTS_COMPLETE, payload: customer_accounts});\n\n\n            }).catch(error => {\n\n            if(error.response !== undefined){\n\n                const status = error.response.status;\n\n                dispatch({type: LOGOUT_SUCCESS});\n\n                if(status === 440){\n\n                    dispatch({type: OPEN_TIMEOUT_MODAL});\n\n                }\n\n                history.push(\"/\");\n\n            }\n\n        });\n\n    };\n\n};\n\n","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/CustomerAccounts.js",[],["203","204"],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/CustomerAccountsReducer.js",["205"],"import {\n    LOGOUT_SUCCESS,\n    GET_CUSTOMER_ACCOUNTS,\n    GET_CUSTOMER_ACCOUNTS_COMPLETE,\n    CLEAR_CUSTOMER_ACCOUNTS_STATE,\n    SEARCH_CUSTOMER_ACCOUNTS_COMPLETE,\n    SEARCH_CUSTOMER_ACCOUNTS_LIMIT_CHANGED\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    initializing_page: false,\n    customer_accounts: [],\n    limit: 50\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SEARCH_CUSTOMER_ACCOUNTS_LIMIT_CHANGED:\n            return{\n                ...state,\n                limit: action.payload\n            };\n        case SEARCH_CUSTOMER_ACCOUNTS_COMPLETE:\n            return{\n                ...state,\n                customer_accounts: action.payload\n            };\n        case GET_CUSTOMER_ACCOUNTS_COMPLETE:\n            return{\n                ...state,\n                initializing_page: false,\n                customer_accounts: action.payload\n            };\n        case GET_CUSTOMER_ACCOUNTS:\n            return{\n                ...state,\n                initializing_page: true\n            };\n        case CLEAR_CUSTOMER_ACCOUNTS_STATE:\n            return{\n                ...state,\n                ...INITIAL_STATE\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...INITIAL_STATE\n            };\n        default:\n            return state;\n    }\n}","/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/ViewCustomerAccountReducer.js",["206"],"import {\n    LOGOUT_SUCCESS,\n    GET_CUSTOMER_DATA_COMPLETE,\n    GET_CUSTOMER_DATA,\n    CLEAR_VIEW_CUSTOMER_ACCOUNT_STATE\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    initializing_page: false,\n    full_name: '',\n    email: '',\n    username: '',\n    building_name: '',\n    apartment_floor: '',\n    country: '',\n    phone_number: '',\n    current_sign_in_ip: '',\n    last_sign_in_ip: '',\n    profile_link: ''\n};\n\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case GET_CUSTOMER_DATA_COMPLETE:\n            return{\n                ...state,\n                initializing_page: false,\n                full_name: action.payload.full_name,\n                email: action.payload.email,\n                username: action.payload.username,\n                building_name: action.payload.building_name,\n                apartment_floor: action.payload.apartment_floor,\n                country: action.payload.country,\n                phone_number: action.payload.phone_number,\n                current_sign_in_ip: action.payload.current_sign_in_ip,\n                last_sign_in_ip: action.payload.last_sign_in_ip,\n                profile_link: action.payload.profile_link\n            };\n        case GET_CUSTOMER_DATA:\n            return{\n                ...state,\n                initializing_page: true\n            };\n        case CLEAR_VIEW_CUSTOMER_ACCOUNT_STATE:\n            return{\n                ...state,\n                ...INITIAL_STATE\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...INITIAL_STATE\n            };\n        default:\n            return state;\n    }\n}","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/ViewCustomerAccountActions.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/ViewCustomerAccount.js",["207","208"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Wrapper from \"./Wrapper\";\nimport {\n    getCustomerData,\n    clearViewCustomerAccountState\n} from \"../actions\";\nimport _ from \"lodash\";\nimport {  Spinner, Card,  Button, Form, Modal} from \"react-bootstrap\";\n\nclass ViewCustomerAccount extends  Component{\n\n    constructor(props){\n\n        super(props);\n\n        const history = props.history;\n\n        const params = props.match.params;\n\n        this.state = {\n            history,\n            params\n        };\n\n    }\n\n    componentWillUnmount(){\n\n        this.props.clearViewCustomerAccountState();\n\n    }\n\n    componentDidMount(){\n\n\n        const {\n            logged_in,\n            access_token,\n            client,\n            uid,\n            getCustomerData\n        } = this.props;\n\n        const { history, params } = this.state;\n\n\n        if(!logged_in){\n\n            history.push(\"/\");\n\n        }else{\n\n            const customer_user_id = params.customer_user_id;\n\n            getCustomerData(customer_user_id, access_token, client, uid, history);\n\n\n        }\n\n    }\n\n\n    show(){\n\n        const {\n            initializing_page,\n            full_name,\n            email,\n            username,\n            building_name,\n            apartment_floor,\n            country,\n            phone_number,\n            current_sign_in_ip,\n            last_sign_in_ip,\n            profile_link\n        } = this.props;\n\n        if(initializing_page){\n\n            return(\n\n                <div className=\"center-container\">\n\n                    <div className=\"spinner-container\">\n\n                        <Spinner animation=\"border\" variant=\"primary\" />\n\n                    </div>\n\n                </div>\n\n\n            );\n\n        }else{\n\n            return(\n\n                <div className=\"page-container\">\n\n                    <div id=\"view-customer-account-container\">\n\n                        <div id=\"view-customer-profile-container\">\n\n                            <Button\n                                variant=\"primary\"\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    window.open(profile_link, \"_blank\")\n                                }}\n                            >\n                                View Profile\n                            </Button>\n\n                        </div>\n\n                        <Card id=\"view-customer-account-card\">\n\n\n\n                            <Card.Body>\n\n                                <Form>\n\n                                    <Form.Group  >\n\n                                        <Form.Label >\n                                            Full Name\n                                        </Form.Label>\n\n\n                                        <Form.Control\n                                            readOnly\n                                            type=\"text\"\n                                            value={full_name}\n                                        />\n\n                                    </Form.Group>\n\n\n\n                                    <Form.Group  >\n\n                                        <Form.Label >\n                                            Email\n                                        </Form.Label>\n\n\n                                        <Form.Control\n                                            readOnly\n                                            type=\"text\"\n                                            value={email}\n                                        />\n\n                                    </Form.Group>\n\n\n\n                                    <Form.Group  >\n\n                                        <Form.Label >\n                                            Username\n                                        </Form.Label>\n\n\n                                        <Form.Control\n                                            readOnly\n                                            type=\"text\"\n                                            value={username}\n                                        />\n\n                                    </Form.Group>\n\n\n                                    <Form.Group  >\n\n                                        <Form.Label >\n                                            Building Name\n                                        </Form.Label>\n\n\n                                        <Form.Control\n                                            readOnly\n                                            type=\"text\"\n                                            value={building_name}\n                                        />\n\n                                    </Form.Group>\n\n\n\n                                    <Form.Group  >\n\n                                        <Form.Label >\n                                            Apartment Floor\n                                        </Form.Label>\n\n\n                                        <Form.Control\n                                            readOnly\n                                            type=\"text\"\n                                            value={apartment_floor}\n                                        />\n\n                                    </Form.Group>\n\n\n\n                                    <Form.Group  >\n\n                                        <Form.Label >\n                                            Country\n                                        </Form.Label>\n\n\n                                        <Form.Control\n                                            readOnly\n                                            type=\"text\"\n                                            value={country}\n                                        />\n\n                                    </Form.Group>\n\n\n                                    <Form.Group  >\n\n                                        <Form.Label >\n                                            Phone Number\n                                        </Form.Label>\n\n\n                                        <Form.Control\n                                            readOnly\n                                            type=\"text\"\n                                            value={phone_number}\n                                        />\n\n                                    </Form.Group>\n\n\n\n                                    <Form.Group  >\n\n                                        <Form.Label >\n                                            Current Sign In Ip\n                                        </Form.Label>\n\n\n                                        <Form.Control\n                                            readOnly\n                                            type=\"text\"\n                                            value={current_sign_in_ip}\n                                        />\n\n                                    </Form.Group>\n\n\n                                    <Form.Group  >\n\n                                        <Form.Label >\n                                            Last Sign In Ip\n                                        </Form.Label>\n\n\n                                        <Form.Control\n                                            readOnly\n                                            type=\"text\"\n                                            value={last_sign_in_ip}\n                                        />\n\n                                    </Form.Group>\n\n\n\n\n                                </Form>\n\n                            </Card.Body>\n\n                        </Card>\n\n                    </div>\n\n                </div>\n\n            );\n\n        }\n\n    }\n\n    render(){\n\n        return(\n\n            <Wrapper\n                history={this.state.history}\n            >\n\n                <div>\n\n                    {this.show()}\n\n                </div>\n\n            </Wrapper>\n\n        );\n\n\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n\n    const {\n        access_token,\n        client,\n        uid,\n        logged_in\n    } = state.login;\n\n    const {\n        initializing_page,\n        full_name,\n        email,\n        username,\n        building_name,\n        apartment_floor,\n        country,\n        phone_number,\n        current_sign_in_ip,\n        last_sign_in_ip,\n        profile_link\n    } = state.view_customer_account;\n\n    return {\n        access_token,\n        client,\n        uid,\n        logged_in,\n        initializing_page,\n        full_name,\n        email,\n        username,\n        building_name,\n        apartment_floor,\n        country,\n        phone_number,\n        current_sign_in_ip,\n        last_sign_in_ip,\n        profile_link\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getCustomerData,\n    clearViewCustomerAccountState\n})(ViewCustomerAccount);\n","/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/StoreAccounts.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/StoreAccountsReducer.js",["209"],"import {\n    LOGOUT_SUCCESS,\n    INITIALIZE_STORE_ACCOUNTS_PAGE,\n    INITIALIZE_STORE_ACCOUNTS_PAGE_COMPLETE,\n    CLEAR_STORE_ACCOUNTS_STATE,\n    SEARCH_STORE_ACCOUNTS_COMPLETE,\n    SEARCH_STORE_ACCOUNTS_LIMIT_CHANGED,\n    STORE_ACCOUNTS_CHANGED\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    initializing_page: false,\n    limit: 50,\n    store_accounts: [],\n    account_status_options: [],\n    review_status_options: [],\n    countries: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case STORE_ACCOUNTS_CHANGED:\n            return{\n                ...state,\n                store_accounts: action.payload\n            };\n        case SEARCH_STORE_ACCOUNTS_LIMIT_CHANGED:\n            return{\n                ...state,\n                limit: action.payload\n            };\n        case SEARCH_STORE_ACCOUNTS_COMPLETE:\n            return{\n                ...state,\n                store_accounts: action.payload\n            };\n        case INITIALIZE_STORE_ACCOUNTS_PAGE_COMPLETE:\n            return{\n                ...state,\n                initializing_page: false,\n                store_accounts: action.payload.store_accounts,\n                account_status_options: action.payload.account_status_options,\n                review_status_options: action.payload.review_status_options,\n                countries: action.payload.countries\n            };\n        case INITIALIZE_STORE_ACCOUNTS_PAGE:\n            return{\n                ...state,\n                initializing_page: true\n            };\n        case CLEAR_STORE_ACCOUNTS_STATE:\n            return{\n                ...state,\n                ...INITIAL_STATE\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...INITIAL_STATE\n            };\n        default:\n            return state;\n    }\n}\n","/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/StoreAccountsActions.js",[],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/components/ViewStoreAccount.js",["210","211"],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/reducers/ViewStoreAccountReducer.js",["212"],"/home/user/Desktop/wavelix/Code/wavelix_admin/src/actions/ViewStoreAccountActions.js",[],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"213","replacedBy":"217"},{"ruleId":"215","replacedBy":"218"},{"ruleId":"213","replacedBy":"219"},{"ruleId":"215","replacedBy":"220"},{"ruleId":"213","replacedBy":"221"},{"ruleId":"215","replacedBy":"222"},{"ruleId":"213","replacedBy":"223"},{"ruleId":"215","replacedBy":"224"},{"ruleId":"213","replacedBy":"225"},{"ruleId":"215","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":15,"column":8,"nodeType":"229","messageId":"230","endLine":15,"endColumn":9},{"ruleId":"213","replacedBy":"231"},{"ruleId":"215","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":24,"column":1,"nodeType":"235","endLine":88,"endColumn":2},{"ruleId":"233","severity":1,"message":"234","line":17,"column":1,"nodeType":"235","endLine":53,"endColumn":2},{"ruleId":"213","replacedBy":"236"},{"ruleId":"215","replacedBy":"237"},{"ruleId":"233","severity":1,"message":"234","line":36,"column":1,"nodeType":"235","endLine":137,"endColumn":2},{"ruleId":"233","severity":1,"message":"234","line":36,"column":1,"nodeType":"235","endLine":138,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":15,"column":8,"nodeType":"229","messageId":"230","endLine":15,"endColumn":9},{"ruleId":"213","replacedBy":"238"},{"ruleId":"215","replacedBy":"239"},{"ruleId":"233","severity":1,"message":"234","line":16,"column":1,"nodeType":"235","endLine":51,"endColumn":2},{"ruleId":"233","severity":1,"message":"234","line":23,"column":1,"nodeType":"235","endLine":57,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":8,"column":8,"nodeType":"229","messageId":"230","endLine":8,"endColumn":9},{"ruleId":"227","severity":1,"message":"240","line":9,"column":41,"nodeType":"229","messageId":"230","endLine":9,"endColumn":46},{"ruleId":"233","severity":1,"message":"234","line":20,"column":1,"nodeType":"235","endLine":63,"endColumn":2},{"ruleId":"227","severity":1,"message":"241","line":67,"column":34,"nodeType":"229","messageId":"230","endLine":67,"endColumn":39},{"ruleId":"227","severity":1,"message":"242","line":129,"column":29,"nodeType":"229","messageId":"230","endLine":129,"endColumn":35},{"ruleId":"233","severity":1,"message":"234","line":32,"column":1,"nodeType":"235","endLine":91,"endColumn":2},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],["243"],["244"],["243"],["244"],["243"],["244"],["243"],["244"],["243"],["244"],"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar",["243"],["244"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["243"],["244"],["243"],["244"],"'Modal' is defined but never used.","'cable' is assigned a value but never used.","'status' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]